import net.fabricmc.loom.task.RemapJarTask
plugins {
	id 'fabric-loom' version '1.2-SNAPSHOT'
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '8.1.1'
}

version = project.mod_version
group = project.maven_group

repositories {
	maven { url 'https://maven.fabricmc.net' }
	maven { url "https://maven.kyrptonaught.dev" }
	maven { url "https://maven.terraformersmc.com/releases" }
	maven { url "https://maven.nucleoid.xyz/" }
	maven { url "https://api.modrinth.com/maven" }
	maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
	maven { url "https://masa.dy.fi/maven" }
	mavenCentral()
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}") {
		exclude group: "net.fabricmc.fabric-api", module: "fabric-gametest-api-v1"
	}

	//SGui
	modImplementation include("eu.pb4:sgui:1.2.1+1.19.3") { exclude group: "net.fabricmc.fabric-api" }

	//Modified Fantasy
	modImplementation include('xyz.nucleoid:fantasy:0.4.9-kyrpt-1.19.4') { exclude group: "net.fabricmc.fabric-api" }

	//Starlight
	modImplementation('maven.modrinth:starlight:1.1.1+1.19') { exclude group: "net.fabricmc.fabric-api" }

	//Luck Perms
	modImplementation('maven.modrinth:luckperms:v5.4.66-forge') { exclude group: "net.fabricmc.fabric-api" }
	modImplementation('me.lucko:fabric-permissions-api:0.2-SNAPSHOT') { exclude group: "net.fabricmc.fabric-api" }
	compileOnly 'net.luckperms:api:5.4'
	modImplementation "com.moandjiezana.toml:toml4j:0.7.2"

	//Fabric Proxy Lite
	modImplementation('maven.modrinth:fabricproxy-lite:v2.5.0') { exclude group: "net.fabricmc.fabric-api" }

	//crossstitch
	modImplementation('maven.modrinth:crossstitch:0.1.6') { exclude group: "net.fabricmc.fabric-api" }

	//carpet
	modImplementation('carpet:fabric-carpet:1.19.4-1.4.101+v230319') { exclude group: "net.fabricmc.fabric-api" }

	//NoChatReports
	modImplementation('maven.modrinth:no-chat-reports:Fabric-1.19.4-v2.1.3') { exclude group: "net.fabricmc.fabric-api" }

	//Discord Bridge
	shadow implementation("net.dv8tion:JDA:5.0.0-beta.9") { exclude module: 'opus-java' }
}

loom {
	accessWidenerPath = file("src/main/resources/serverutils.accesswidener")
}

configurations {
	// Determines shaded dependencies
	shade
	developmentElements {
		extendsFrom(implementation, namedElements)
	}
}

shadowJar {
	// Store in temporary folder instead of outputting directly
	destinationDirectory = file("${buildDir}/tmp/allJar")
	// Only shade dependencies not provided by Minecraft/FAPI/FLoader
	configurations = [project.configurations.shadow]
	relocate 'okhttp3', 'net.dv8tion.shaded.okhttp3'
	relocate 'okio' , 'net.dv8tion.shaded.okio'

	//Exclude META-INF entries of shaded deps
	exclude('META-INF/**', '**/*.pdn','**/*.bbmodel')
	// include() upsets shadow, so use from() instead
	from('LICENSE.md', 'NOTICE.txt')
	from('licenses') {
		into('licenses')
	}
}

remapJar {
	dependsOn(shadowJar)
	inputFile = tasks.shadowJar.archiveFile
}

base {
	archivesName = project.archives_base_name
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	// Store in temporary folder instead of outputting directly
	destinationDirectory = file("${buildDir}/tmp/thinJar")
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}"}
	}
}